1- CVE-2014-9798
Note:
perhaps only one of the following is enough for the bug, shall we consider the others as FP?

TP

1-
------------- Caller 0x8f61505c -------------
03:09:12.877826: Configuration: [('0x8f615478', 'r1'), ('0x8f615448', 'r1'), ('0x8f615448', 'r2'), ('0x8f615478', 'r2')]
===================== Start Info path =====================
Sink address: 0x8f61b58c

Reason: sink accepts r1 which points to the location of memory <BV32 0x2c + reg_x0_ret_57347_32>.

Content of <BV32 0x2c + reg_x0_ret_57347_32>: <BV32 taint_buf_88_4096[359:352] .. taint_buf_88_4096[367:360] .. taint_buf_88_4096[375:368] .. taint_buf_88_4096[383:376]>


Path 
----------------
0x8f61505c -> 0x8f615070 -> 0x8f615078 -> 0x8f61507c -> 0x8f61508c -> 0x8f6150a4 -> 0x8f6150ac -> 0x8f6150c0 -> 0x8f6150c8 -> 0x8f6150e0 -> 0x8f6150e8 -> 0x8f615104 -> 0x8f61510c -> 0x8f615118 -> 0x8f615128 -> 0x8f615138 -> 0x8f615144 -> 0x8f61514c -> 0x8f61516c -> 0x8f615174 -> 0x8f615180 -> 0x8f615188 -> 0x8f61518c -> 0x8f615198 -> 0x8f6151b0 -> 0x8f6151b8 -> 0x8f6151c8 -> 0x8f6151d0 -> 0x8f6151e0 -> 0x8f615210 -> 0x8f615218 -> 0x8f61525c -> 0x8f615268 -> 0x8f615274 -> 0x8f615380 -> 0x8f615390 -> 0x8f6153a0 -> 0x8f6153b4 -> 0x8f6153c4 -> 0x8f6153d4 -> 0x8f6153d8 -> 0x8f6153f0 -> 0x8f6153f4 -> 0x8f615408 -> 0x8f615428 -> 0x8f615430 -> 0x8f61544c -> 0x8f615454 -> 0x8f615460 -> 0x8f61547c -> 0x8f615484 -> 0x8f615490 -> 0x8f615498 -> 0x8f6154a8 -> 0x8f6154b8 -> 0x8f6154c4 -> 0x8f6154d4 -> 0x8f6154e4 -> 0x8f60d4c4

Fully tainted conditions 
----------------
None
===================== End Info path =====================


===================== Start Info path =====================
Sink address: 0x8f61b58c

Reason: sink accepts parameter r1 which is tainted.

Content of r1: <BV32 reg_x0_ret_57347_32 + taint_buf_94_4096[31:0]>


Path 
----------------
0x8f61505c -> 0x8f615070 -> 0x8f615078 -> 0x8f61507c -> 0x8f61508c -> 0x8f6150a4 -> 0x8f6150ac -> 0x8f6150c0 -> 0x8f6150c8 -> 0x8f6150e0 -> 0x8f6150e8 -> 0x8f615104 -> 0x8f61510c -> 0x8f615118 -> 0x8f615128 -> 0x8f615138 -> 0x8f615144 -> 0x8f61514c -> 0x8f61516c -> 0x8f615174 -> 0x8f615180 -> 0x8f615188 -> 0x8f61518c -> 0x8f615198 -> 0x8f6151b0 -> 0x8f6151b8 -> 0x8f6151c8 -> 0x8f6151d0 -> 0x8f6151e0 -> 0x8f615210 -> 0x8f615218 -> 0x8f61525c -> 0x8f615268 -> 0x8f615274 -> 0x8f615380 -> 0x8f615390 -> 0x8f6153a0 -> 0x8f6153b4 -> 0x8f6153c4 -> 0x8f6153d4 -> 0x8f6153d8 -> 0x8f6153f0 -> 0x8f6153f4 -> 0x8f615408 -> 0x8f615428 -> 0x8f615430 -> 0x8f61544c -> 0x8f615454 -> 0x8f615460 -> 0x8f61547c -> 0x8f615484 -> 0x8f615490 -> 0x8f615498 -> 0x8f6154a8 -> 0x8f6154b8 -> 0x8f6154c4 -> 0x8f6154d4 -> 0x8f6154e4 -> 0x8f60d4c4 -> 0x8f60d4fc -> 0x8f60d518

Fully tainted conditions 
----------------
None
===================== End Info path =====================

===================== Start Info path =====================
Sink address: 0x8f61b58c

Reason: sink accepts r0 which points to the location of memory <BV32 0x7ffeff48>.

Content of <BV32 0x7ffeff48>: <BV32 taint_buf_94_4096[359:352] .. taint_buf_94_4096[367:360] .. taint_buf_94_4096[375:368] .. taint_buf_94_4096[383:376]>


Path 
----------------
0x8f61505c -> 0x8f615070 -> 0x8f615078 -> 0x8f61507c -> 0x8f61508c -> 0x8f6150a4 -> 0x8f6150ac -> 0x8f6150c0 -> 0x8f6150c8 -> 0x8f6150e0 -> 0x8f6150e8 -> 0x8f615104 -> 0x8f61510c -> 0x8f615118 -> 0x8f615128 -> 0x8f615138 -> 0x8f615144 -> 0x8f61514c -> 0x8f61516c -> 0x8f615174 -> 0x8f615180 -> 0x8f615188 -> 0x8f61518c -> 0x8f615198 -> 0x8f6151b0 -> 0x8f6151b8 -> 0x8f6151c8 -> 0x8f6151d0 -> 0x8f6151e0 -> 0x8f615210 -> 0x8f615218 -> 0x8f61525c -> 0x8f615268 -> 0x8f615274 -> 0x8f615380 -> 0x8f615390 -> 0x8f6153a0 -> 0x8f6153b4 -> 0x8f6153c4 -> 0x8f6153d4 -> 0x8f6153d8 -> 0x8f6153f0 -> 0x8f6153f4 -> 0x8f615408 -> 0x8f615428 -> 0x8f615430 -> 0x8f61544c -> 0x8f615454 -> 0x8f615460 -> 0x8f61547c -> 0x8f615484 -> 0x8f615490 -> 0x8f615498 -> 0x8f6154a8 -> 0x8f6154b8 -> 0x8f6154c4 -> 0x8f6154d4 -> 0x8f6154e4 -> 0x8f60d4c4 -> 0x8f60d4fc -> 0x8f60d518

Fully tainted conditions 
----------------
None
===================== End Info path =====================

===================== Start Info path =====================
Sink address: 0x8f61b58c

Reason: sink accepts parameter r2 which is tainted.

Content of r2: <BV32 __or__(0#8 .. taint_buf_96_4096[47:40] .. 0x0#16, taint_buf_96_4096[39:32] .. 0x0#24, 0x0#24 .. taint_buf_96_4096[63:56], 0x0#16 .. taint_buf_96_4096[55:48] .. 0#8)>


Path 
----------------
0x8f61505c -> 0x8f615070 -> 0x8f615078 -> 0x8f61507c -> 0x8f61508c -> 0x8f6150a4 -> 0x8f6150ac -> 0x8f6150c0 -> 0x8f6150c8 -> 0x8f6150e0 -> 0x8f6150e8 -> 0x8f615104 -> 0x8f61510c -> 0x8f615118 -> 0x8f615128 -> 0x8f615138 -> 0x8f615144 -> 0x8f61514c -> 0x8f61516c -> 0x8f615174 -> 0x8f615180 -> 0x8f615188 -> 0x8f61518c -> 0x8f615198 -> 0x8f6151b0 -> 0x8f6151b8 -> 0x8f6151c8 -> 0x8f6151d0 -> 0x8f6151e0 -> 0x8f615210 -> 0x8f615218 -> 0x8f61525c -> 0x8f615268 -> 0x8f615274 -> 0x8f615380 -> 0x8f615390 -> 0x8f6153a0 -> 0x8f6153b4 -> 0x8f6153c4 -> 0x8f6153d4 -> 0x8f6153d8 -> 0x8f6153f0 -> 0x8f6153f4 -> 0x8f615408 -> 0x8f615428 -> 0x8f615430 -> 0x8f61544c -> 0x8f615454 -> 0x8f615460 -> 0x8f61547c -> 0x8f615484 -> 0x8f615490 -> 0x8f615498 -> 0x8f6154a8 -> 0x8f6154b8 -> 0x8f6154c4 -> 0x8f6154d4 -> 0x8f6154e4 -> 0x8f60d4c4 -> 0x8f60d4fc -> 0x8f60d518 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574

Fully tainted conditions 
----------------
None
===================== End Info path =====================

FP:

1-
===================== Start Info path =====================
Sink address: 0x8f61b58c

Reason: sink accepts r0 which points to the location of memory <BV32 reg_x0_ret_57349_32>.

Content of <BV32 reg_x0_ret_57349_32>: <BV32 taint_buf_98_4096[7:0] .. taint_buf_98_4096[15:8] .. taint_buf_98_4096[23:16] .. taint_buf_98_4096[31:24]>


Path 
----------------
0x8f61505c -> 0x8f615070 -> 0x8f615078 -> 0x8f61507c -> 0x8f61508c -> 0x8f6150a4 -> 0x8f6150ac -> 0x8f6150c0 -> 0x8f6150c8 -> 0x8f6150e0 -> 0x8f6150e8 -> 0x8f615104 -> 0x8f61510c -> 0x8f615118 -> 0x8f615128 -> 0x8f615138 -> 0x8f615144 -> 0x8f61514c -> 0x8f61516c -> 0x8f615174 -> 0x8f615180 -> 0x8f615188 -> 0x8f61518c -> 0x8f615198 -> 0x8f6151b0 -> 0x8f6151b8 -> 0x8f6151c8 -> 0x8f6151d0 -> 0x8f6151e0 -> 0x8f615210 -> 0x8f615218 -> 0x8f61525c -> 0x8f615268 -> 0x8f615274 -> 0x8f615380 -> 0x8f615390 -> 0x8f6153a0 -> 0x8f6153b4 -> 0x8f6153c4 -> 0x8f6153d4 -> 0x8f6153d8 -> 0x8f6153f0 -> 0x8f6153f4 -> 0x8f615408 -> 0x8f615428 -> 0x8f615430 -> 0x8f61544c -> 0x8f615454 -> 0x8f615460 -> 0x8f61547c -> 0x8f615484 -> 0x8f615490 -> 0x8f615498 -> 0x8f6154a8 -> 0x8f6154b8 -> 0x8f6154c4 -> 0x8f6154d4 -> 0x8f6154e4 -> 0x8f60d4c4 -> 0x8f60d4fc -> 0x8f60d518 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574 -> 0x8f60d59c -> 0x8f60d5a8 -> 0x8f60d5b0 -> 0x8f60d5c8 -> 0x8f60d5d0 -> 0x8f60d5dc -> 0x8f60d5e0 -> 0x8f60d5ec -> 0x8f60d5fc -> 0x8f60d610 -> 0x8f60d638 -> 0x8f60d640 -> 0x8f60d64c -> 0x8f60d658 -> 0x8f60daec -> 0x8f60db00 -> 0x8f60da0c -> 0x8f60da10 -> 0x8f60da18 -> 0x8f60da20 -> 0x8f60da24 -> 0x8f60da2c -> 0x8f60da7c -> 0x8f60da88 -> 0x8f60da8c -> 0x8f60da9c

Fully tainted conditions 
----------------
None
===================== End Info path =====================

2-
===================== Start Info path =====================
Dangerous loop condition at address 0x8f60d544

Reason: a tainted variable is used in the guard of a loop condition

Condition: <Bool (reg_x0_ret_57347_32 + __invert__(((if ((if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32) == bss_46083_32 .. bss_46082_32 .. bss_46081_32 .. bss_46080_32) then bss_33703_32 .. bss_33702_32 .. bss_33701_32 .. bss_33700_32 else (0xffffffff + (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32))) | __invert__(((if ((if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32) == bss_46083_32 .. bss_46082_32 .. bss_46081_32 .. bss_46080_32) then bss_33703_32 .. bss_33702_32 .. bss_33701_32 .. bss_33700_32 else (0xffffffff + (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32))) + bss_37899_32 .. bss_37898_32 .. bss_37897_32 .. bss_37896_32))))) < __add__(reg_x0_ret_57347_32, taint_buf_94_4096[31:0], __or__(0#8 .. taint_buf_96_4096[47:40] .. 0x0#16, taint_buf_96_4096[39:32] .. 0x0#24, 0x0#24 .. taint_buf_96_4096[63:56], 0x0#16 .. taint_buf_96_4096[55:48] .. 0#8), __or__((LShR(((LShR(taint_buf_103_4096[63:56] .. taint_buf_103_4096[55:48] .. taint_buf_103_4096[47:40] .. taint_buf_103_4096[39:32], 0x8) & 0xff) << 0x18), 0x18) << 0x10), (taint_buf_103_4096[63:56] .. taint_buf_103_4096[55:48] .. taint_buf_103_4096[47:40] .. taint_buf_103_4096[39:32] << 0x18), LShR(taint_buf_103_4096[63:56] .. taint_buf_103_4096[55:48] .. taint_buf_103_4096[47:40] .. taint_buf_103_4096[39:32], 0x18), (LShR(((LShR(taint_buf_103_4096[63:56] .. taint_buf_103_4096[55:48] .. taint_buf_103_4096[47:40] .. taint_buf_103_4096[39:32], 0x10) & 0xff) << 0x18), 0x18) << 0x8)))>


Tainted Path 
----------------
0x8f61505c -> 0x8f615070 -> 0x8f615078 -> 0x8f61507c -> 0x8f61508c -> 0x8f6150a4 -> 0x8f6150ac -> 0x8f6150c0 -> 0x8f6150c8 -> 0x8f6150e0 -> 0x8f6150e8 -> 0x8f615104 -> 0x8f61510c -> 0x8f615118 -> 0x8f615128 -> 0x8f615138 -> 0x8f615144 -> 0x8f61514c -> 0x8f61516c -> 0x8f615174 -> 0x8f615180 -> 0x8f615188 -> 0x8f61518c -> 0x8f615198 -> 0x8f6151b0 -> 0x8f6151b8 -> 0x8f6151c8 -> 0x8f6151d0 -> 0x8f6151e0 -> 0x8f615210 -> 0x8f615218 -> 0x8f61525c -> 0x8f615268 -> 0x8f615274 -> 0x8f615380 -> 0x8f615390 -> 0x8f6153a0 -> 0x8f6153b4 -> 0x8f6153c4 -> 0x8f6153d4 -> 0x8f6153d8 -> 0x8f6153f0 -> 0x8f6153f4 -> 0x8f615408 -> 0x8f615428 -> 0x8f615430 -> 0x8f61544c -> 0x8f615454 -> 0x8f615460 -> 0x8f61547c -> 0x8f615484 -> 0x8f615490 -> 0x8f615498 -> 0x8f6154a8 -> 0x8f6154b8 -> 0x8f6154c4 -> 0x8f6154d4 -> 0x8f6154e4 -> 0x8f60d4c4 -> 0x8f60d4fc -> 0x8f60d518 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574 -> 0x8f60d59c -> 0x8f60d5a8 -> 0x8f60d5b0 -> 0x8f60d5c8 -> 0x8f60d5d0 -> 0x8f60d5dc -> 0x8f60d5e0 -> 0x8f60d5ec -> 0x8f60d5fc -> 0x8f60d610 -> 0x8f60d638 -> 0x8f60d640 -> 0x8f60d64c -> 0x8f60d658 -> 0x8f60daec -> 0x8f60db00 -> 0x8f60da0c -> 0x8f60da10 -> 0x8f60da18 -> 0x8f60da20 -> 0x8f60da24 -> 0x8f60da2c -> 0x8f60d524 -> 0x8f60d534 -> 0x8f60d53c

===================== End Info path =====================

3-
===================== Start Info path =====================
Dangerous loop condition at address 0x8f60da2c

Reason: a tainted variable is used in the guard of a loop condition

Condition: <Bool __add__(reg_x0_ret_57347_32, taint_buf_94_4096[31:0], __or__(0#8 .. taint_buf_96_4096[47:40] .. 0x0#16, taint_buf_96_4096[39:32] .. 0x0#24, 0x0#24 .. taint_buf_96_4096[63:56], 0x0#16 .. taint_buf_96_4096[55:48] .. 0#8), __or__(0#8 .. taint_buf_103_4096[47:40] .. 0x0#16, taint_buf_103_4096[39:32] .. 0x0#24, 0x0#24 .. taint_buf_103_4096[63:56], 0x0#16 .. taint_buf_103_4096[55:48] .. 0#8), 0x28) < (reg_x0_ret_57347_32 + __invert__(((if ((if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32) == bss_46083_32 .. bss_46082_32 .. bss_46081_32 .. bss_46080_32) then bss_33703_32 .. bss_33702_32 .. bss_33701_32 .. bss_33700_32 else (0xffffffff + (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32))) | __invert__(((if ((if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32) == bss_46083_32 .. bss_46082_32 .. bss_46081_32 .. bss_46080_32) then bss_33703_32 .. bss_33702_32 .. bss_33701_32 .. bss_33700_32 else (0xffffffff + (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32))) + bss_37899_32 .. bss_37898_32 .. bss_37897_32 .. bss_37896_32)))))>


Tainted Path 
----------------
0x8f61505c -> 0x8f615070 -> 0x8f615078 -> 0x8f61507c -> 0x8f61508c -> 0x8f6150a4 -> 0x8f6150ac -> 0x8f6150c0 -> 0x8f6150c8 -> 0x8f6150e0 -> 0x8f6150e8 -> 0x8f615104 -> 0x8f61510c -> 0x8f615118 -> 0x8f615128 -> 0x8f615138 -> 0x8f615144 -> 0x8f61514c -> 0x8f61516c -> 0x8f615174 -> 0x8f615180 -> 0x8f615188 -> 0x8f61518c -> 0x8f615198 -> 0x8f6151b0 -> 0x8f6151b8 -> 0x8f6151c8 -> 0x8f6151d0 -> 0x8f6151e0 -> 0x8f615210 -> 0x8f615218 -> 0x8f61525c -> 0x8f615268 -> 0x8f615274 -> 0x8f615380 -> 0x8f615390 -> 0x8f6153a0 -> 0x8f6153b4 -> 0x8f6153c4 -> 0x8f6153d4 -> 0x8f6153d8 -> 0x8f6153f0 -> 0x8f6153f4 -> 0x8f615408 -> 0x8f615428 -> 0x8f615430 -> 0x8f61544c -> 0x8f615454 -> 0x8f615460 -> 0x8f61547c -> 0x8f615484 -> 0x8f615490 -> 0x8f615498 -> 0x8f6154a8 -> 0x8f6154b8 -> 0x8f6154c4 -> 0x8f6154d4 -> 0x8f6154e4 -> 0x8f60d4c4 -> 0x8f60d4fc -> 0x8f60d518 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574 -> 0x8f60d59c -> 0x8f60d5a8 -> 0x8f60d5b0 -> 0x8f60d5c8 -> 0x8f60d5d0 -> 0x8f60d5dc -> 0x8f60d5e0 -> 0x8f60d5ec -> 0x8f60d5fc -> 0x8f60d610 -> 0x8f60d638 -> 0x8f60d640 -> 0x8f60d64c -> 0x8f60d658 -> 0x8f60daec -> 0x8f60db00 -> 0x8f60da0c -> 0x8f60da10 -> 0x8f60da18 -> 0x8f60da20 -> 0x8f60da24 -> 0x8f60da2c -> 0x8f60d524 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574 -> 0x8f60d59c -> 0x8f60d5a8 -> 0x8f60d5b0 -> 0x8f60d5c8 -> 0x8f60d5d0 -> 0x8f60d5dc -> 0x8f60d5e0 -> 0x8f60d5ec -> 0x8f60d5fc -> 0x8f60d610 -> 0x8f60d638 -> 0x8f60d640 -> 0x8f60d64c -> 0x8f60d658 -> 0x8f60daec -> 0x8f60db00 -> 0x8f60da0c -> 0x8f60da10 -> 0x8f60da18 -> 0x8f60da20 -> 0x8f60da24

===================== End Info path =====================

===================== Start Info path =====================
Dangerous loop condition at address 0x8f60da68

Reason: a tainted variable is used in the guard of a loop condition

Condition: <Bool __add__(reg_x0_ret_57347_32, taint_buf_94_4096[31:0], __or__(0#8 .. taint_buf_96_4096[47:40] .. 0x0#16, taint_buf_96_4096[39:32] .. 0x0#24, 0x0#24 .. taint_buf_96_4096[63:56], 0x0#16 .. taint_buf_96_4096[55:48] .. 0#8), __or__(0#8 .. taint_buf_103_4096[47:40] .. 0x0#16, taint_buf_103_4096[39:32] .. 0x0#24, 0x0#24 .. taint_buf_103_4096[63:56], 0x0#16 .. taint_buf_103_4096[55:48] .. 0#8), __or__(0#8 .. taint_buf_107_4096[47:40] .. 0x0#16, taint_buf_107_4096[39:32] .. 0x0#24, 0x0#24 .. taint_buf_107_4096[63:56], 0x0#16 .. taint_buf_107_4096[55:48] .. 0#8), __or__(0#8 .. taint_buf_111_4096[47:40] .. 0x0#16, taint_buf_111_4096[39:32] .. 0x0#24, 0x0#24 .. taint_buf_111_4096[63:56], 0x0#16 .. taint_buf_111_4096[55:48] .. 0#8), __or__(0#8 .. taint_buf_115_4096[47:40] .. 0x0#16, taint_buf_115_4096[39:32] .. 0x0#24, 0x0#24 .. taint_buf_115_4096[63:56], 0x0#16 .. taint_buf_115_4096[55:48] .. 0#8), __or__(0#8 .. taint_buf_119_4096[47:40] .. 0x0#16, taint_buf_119_4096[39:32] .. 0x0#24, 0x0#24 .. taint_buf_119_4096[63:56], 0x0#16 .. taint_buf_119_4096[55:48] .. 0#8), 0x28) < (reg_x0_ret_57347_32 + __invert__(((if ((if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32) == bss_46083_32 .. bss_46082_32 .. bss_46081_32 .. bss_46080_32) then bss_33703_32 .. bss_33702_32 .. bss_33701_32 .. bss_33700_32 else (0xffffffff + (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32))) | __invert__(((if ((if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32) == bss_46083_32 .. bss_46082_32 .. bss_46081_32 .. bss_46080_32) then bss_33703_32 .. bss_33702_32 .. bss_33701_32 .. bss_33700_32 else (0xffffffff + (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46083_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46082_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46081_32 else 0) .. (if And((bss_37924_32 == 0), (bss_37925_32 == 0), (bss_37926_32 == 0), (bss_37927_32 == 0)) then bss_46080_32 else 0) else bss_37927_32 .. bss_37926_32 .. bss_37925_32 .. bss_37924_32))) + bss_37899_32 .. bss_37898_32 .. bss_37897_32 .. bss_37896_32)))))>


Tainted Path 
----------------
0x8f61505c -> 0x8f615070 -> 0x8f615078 -> 0x8f61507c -> 0x8f61508c -> 0x8f6150a4 -> 0x8f6150ac -> 0x8f6150c0 -> 0x8f6150c8 -> 0x8f6150e0 -> 0x8f6150e8 -> 0x8f615104 -> 0x8f61510c -> 0x8f615118 -> 0x8f615128 -> 0x8f615138 -> 0x8f615144 -> 0x8f61514c -> 0x8f61516c -> 0x8f615174 -> 0x8f615180 -> 0x8f615188 -> 0x8f61518c -> 0x8f615198 -> 0x8f6151b0 -> 0x8f6151b8 -> 0x8f6151c8 -> 0x8f6151d0 -> 0x8f6151e0 -> 0x8f615210 -> 0x8f615218 -> 0x8f61525c -> 0x8f615268 -> 0x8f615274 -> 0x8f615380 -> 0x8f615390 -> 0x8f6153a0 -> 0x8f6153b4 -> 0x8f6153c4 -> 0x8f6153d4 -> 0x8f6153d8 -> 0x8f6153f0 -> 0x8f6153f4 -> 0x8f615408 -> 0x8f615428 -> 0x8f615430 -> 0x8f61544c -> 0x8f615454 -> 0x8f615460 -> 0x8f61547c -> 0x8f615484 -> 0x8f615490 -> 0x8f615498 -> 0x8f6154a8 -> 0x8f6154b8 -> 0x8f6154c4 -> 0x8f6154d4 -> 0x8f6154e4 -> 0x8f60d4c4 -> 0x8f60d4fc -> 0x8f60d518 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574 -> 0x8f60d59c -> 0x8f60d5a8 -> 0x8f60d5b0 -> 0x8f60d5c8 -> 0x8f60d5d0 -> 0x8f60d5dc -> 0x8f60d5e0 -> 0x8f60d5ec -> 0x8f60d5fc -> 0x8f60d610 -> 0x8f60d638 -> 0x8f60d640 -> 0x8f60d64c -> 0x8f60d658 -> 0x8f60daec -> 0x8f60db00 -> 0x8f60da0c -> 0x8f60da10 -> 0x8f60da18 -> 0x8f60da20 -> 0x8f60da24 -> 0x8f60da2c -> 0x8f60d524 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574 -> 0x8f60d59c -> 0x8f60d5a8 -> 0x8f60d5b0 -> 0x8f60d5c8 -> 0x8f60d5d0 -> 0x8f60d5dc -> 0x8f60d5e0 -> 0x8f60d5ec -> 0x8f60d5fc -> 0x8f60d610 -> 0x8f60d638 -> 0x8f60d640 -> 0x8f60d64c -> 0x8f60d658 -> 0x8f60daec -> 0x8f60db00 -> 0x8f60da0c -> 0x8f60da10 -> 0x8f60da18 -> 0x8f60da20 -> 0x8f60da24 -> 0x8f60da2c -> 0x8f60d524 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574 -> 0x8f60d59c -> 0x8f60d5a8 -> 0x8f60d5b0 -> 0x8f60d5c8 -> 0x8f60d5d0 -> 0x8f60d5dc -> 0x8f60d5e0 -> 0x8f60d5ec -> 0x8f60d5fc -> 0x8f60d610 -> 0x8f60d638 -> 0x8f60d640 -> 0x8f60d64c -> 0x8f60d658 -> 0x8f60daec -> 0x8f60db00 -> 0x8f60da0c -> 0x8f60da10 -> 0x8f60da18 -> 0x8f60da20 -> 0x8f60da24 -> 0x8f60da2c -> 0x8f60d524 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574 -> 0x8f60d59c -> 0x8f60d5a8 -> 0x8f60d5b0 -> 0x8f60d5c8 -> 0x8f60d5d0 -> 0x8f60d5dc -> 0x8f60d5e0 -> 0x8f60d5ec -> 0x8f60d5fc -> 0x8f60d610 -> 0x8f60d638 -> 0x8f60dadc -> 0x8f60dae8 -> 0x8f60da0c -> 0x8f60da10 -> 0x8f60da18 -> 0x8f60da20 -> 0x8f60da24 -> 0x8f60da2c -> 0x8f60d524 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574 -> 0x8f60d59c -> 0x8f60d5a8 -> 0x8f60d5b0 -> 0x8f60d5c8 -> 0x8f60d5d0 -> 0x8f60d5dc -> 0x8f60d5e0 -> 0x8f60d5ec -> 0x8f60d5fc -> 0x8f60d610 -> 0x8f60d638 -> 0x8f60d640 -> 0x8f60d64c -> 0x8f60d658 -> 0x8f60daec -> 0x8f60db00 -> 0x8f60da0c -> 0x8f60da10 -> 0x8f60da18 -> 0x8f60da20 -> 0x8f60da24 -> 0x8f60da2c -> 0x8f60d524 -> 0x8f60d534 -> 0x8f60d53c -> 0x8f60d544 -> 0x8f60d574 -> 0x8f60d59c -> 0x8f60d5a8 -> 0x8f60d5b0 -> 0x8f60d5c8 -> 0x8f60d5d0 -> 0x8f60d5dc -> 0x8f60d5e0 -> 0x8f60d5ec -> 0x8f60d5fc -> 0x8f60d610 -> 0x8f60d638 -> 0x8f60d640 -> 0x8f60d64c -> 0x8f60d658 -> 0x8f60daec -> 0x8f60db00 -> 0x8f60da0c -> 0x8f60da10 -> 0x8f60da18 -> 0x8f60da20 -> 0x8f60da24

===================== End Info path =====================
